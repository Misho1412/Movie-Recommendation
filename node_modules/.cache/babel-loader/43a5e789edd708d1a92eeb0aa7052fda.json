{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\misho\\\\Downloads\\\\react\\\\movie-recommender-app\\\\src\\\\Pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport SearchBar from \"./Components/SearchBar\";\nimport NavBar from \"./Components/NavBar\";\nimport Footer from \"./Components/Footer\";\nimport \"./Components/styles/HomeStyles.css\";\nimport MovieCard from \"./Components/MovieCard\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [homeGenreList, setHomeGenreList] = useState([{}]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [currMovies, setCurrMovies] = useState([{}]);\n  useEffect(() => {\n    setCurrMovies([]);\n    setSelectedGenres([]);\n    setHomeGenreList([]);\n    setList([]); // Getting the list of all movies from our Flask server for our search bar\n\n    fetch(\"/api/movies\").then(Response => Response.json()).then(data => setList(data.arr)); // Getting the list of all genres from our backend\n\n    fetch(\"/api/genres\").then(Response => Response.json()).then(data => setHomeGenreList(data.genres));\n  }, []);\n  useEffect(() => {\n    setCurrMovies([]);\n\n    if (selectedGenres.length > 0) {\n      fetch(`/api/discover?genres=${encodeURIComponent(selectedGenres.join(','))}`).then(Response => Response.json()).then(data => setCurrMovies(data.results));\n    }\n  }, [selectedGenres]);\n\n  const onTagClick = genreId => {\n    let isPresent = false;\n\n    for (let id of selectedGenres) {\n      if (id === genreId) {\n        isPresent = true;\n        break;\n      }\n    }\n\n    if (isPresent) {\n      setSelectedGenres(selectedGenres.filter(item => item !== genreId));\n    } else {\n      setSelectedGenres(selectedGenres => [...selectedGenres, genreId]);\n    }\n  };\n\n  const renderMovies = () => currMovies.map(movie => {\n    if (movie) {\n      return /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id + movie.original_title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this);\n    } else {\n      return null;\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HomePage\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        isHome: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"HomeSearch\",\n        children: /*#__PURE__*/_jsxDEV(SearchBar, {\n          movies: list,\n          placeholder: \"Search for a Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"genreHeader\",\n        children: \"Get Top Movies Based On Genre \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonGrid\",\n        children: homeGenreList.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => onTagClick(genre.id),\n          className: selectedGenres.includes(genre.id) ? \"genreTagON\" : \"genreTagOFF\",\n          children: [genre.name, selectedGenres.includes(genre.id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-times\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this) : null]\n        }, genre.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid HomeMovies\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container HomeMovieGrid\",\n        children: currMovies.length > 0 ? renderMovies() : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HomeFooter\",\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"nrO/m/BZOcno0OWjW85arfJnba0=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["SearchBar","NavBar","Footer","MovieCard","useEffect","useState","Home","list","setList","homeGenreList","setHomeGenreList","selectedGenres","setSelectedGenres","currMovies","setCurrMovies","fetch","then","Response","json","data","arr","genres","length","encodeURIComponent","join","results","onTagClick","genreId","isPresent","id","filter","item","renderMovies","map","movie","original_title","genre","includes","name"],"sources":["C:/Users/misho/Downloads/react/movie-recommender-app/src/Pages/Home.js"],"sourcesContent":["import SearchBar from \"./Components/SearchBar\";\r\nimport NavBar from \"./Components/NavBar\";\r\nimport Footer from \"./Components/Footer\";\r\nimport \"./Components/styles/HomeStyles.css\";\r\nimport MovieCard from \"./Components/MovieCard\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Home = () => {\r\n    const [list, setList] = useState([]);\r\n    const [homeGenreList, setHomeGenreList] = useState([{}]);\r\n    const [selectedGenres, setSelectedGenres] = useState([]);\r\n    const [currMovies, setCurrMovies] = useState([{}]);\r\n\r\n    useEffect(() => {\r\n        setCurrMovies([]);\r\n        setSelectedGenres([]);\r\n        setHomeGenreList([]);\r\n        setList([]);\r\n\r\n        // Getting the list of all movies from our Flask server for our search bar\r\n        fetch(\"/api/movies\")\r\n            .then((Response) => Response.json())\r\n            .then((data) => setList(data.arr));\r\n\r\n        // Getting the list of all genres from our backend\r\n        fetch(\"/api/genres\")\r\n            .then((Response) => Response.json())\r\n            .then((data) => setHomeGenreList(data.genres));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setCurrMovies([]);\r\n        if (selectedGenres.length > 0) {\r\n            fetch(`/api/discover?genres=${encodeURIComponent(selectedGenres.join(','))}`)\r\n                .then((Response) => Response.json())\r\n                .then((data) => setCurrMovies(data.results));\r\n        }\r\n    }, [selectedGenres]);\r\n\r\n    const onTagClick = (genreId) => {\r\n        let isPresent = false;\r\n        for (let id of selectedGenres) {\r\n            if (id === genreId) {\r\n                isPresent = true;\r\n                break;\r\n            }\r\n        }\r\n        if (isPresent) {\r\n            setSelectedGenres(selectedGenres.filter((item) => item !== genreId));\r\n        } else {\r\n            setSelectedGenres((selectedGenres) => [...selectedGenres, genreId]);\r\n        }\r\n    };\r\n\r\n    const renderMovies = () =>\r\n        currMovies.map((movie) => {\r\n            if (movie) {\r\n                return (\r\n                    <MovieCard\r\n                        key={movie.id + movie.original_title}\r\n                        movie={movie}\r\n                    />\r\n                );\r\n            } else {\r\n                return null;\r\n            }\r\n        });\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"HomePage\">\r\n                <NavBar isHome={false} />\r\n                <div className=\"HomeSearch\">\r\n                    {/*Rendering the search bar */}\r\n                    <SearchBar movies={list} placeholder=\"Search for a Movie\" />\r\n                </div>\r\n\r\n                <h2 className=\"genreHeader\">Get Top Movies Based On Genre </h2>\r\n                <div className=\"buttonGrid\">\r\n                    {homeGenreList.map((genre) => (\r\n                        <div\r\n                            key={genre.id}\r\n                            onClick={() => onTagClick(genre.id)}\r\n                            className={\r\n                                selectedGenres.includes(genre.id)\r\n                                    ? \"genreTagON\"\r\n                                    : \"genreTagOFF\"\r\n                            }\r\n                        >\r\n                            {genre.name}\r\n                            {selectedGenres.includes(genre.id) ? (\r\n                                <i\r\n                                    className=\"fa fa-times\"\r\n                                    aria-hidden=\"true\"\r\n                                ></i>\r\n                            ) : null}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            {/*Rendering selected genre movies */}\r\n            <div className=\"container-fluid HomeMovies\">\r\n                <div className=\"container HomeMovieGrid\">\r\n                    {currMovies.length > 0 ? renderMovies() : null}\r\n                </div>\r\n            </div>\r\n            <div className=\"HomeFooter\">\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module"}